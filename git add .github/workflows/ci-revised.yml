name: CI - Revised
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read
  actions: read

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show runner info (diagnostic)
        run: |
          echo "Runner name: $RUNNER_NAME"
          echo "Runner OS: $RUNNER_OS"
          uname -a || true
          date
        shell: bash

      - name: Set up Node.js (example)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
        shell: bash

      - name: Run tests (with simple retry)
        id: runtests
        run: |
          n=0
          until [ $n -ge 3 ]
          do
            npm test && break
            n=$((n+1))
            echo "Test attempt $n failed. Retrying in 5s..."
            sleep 5
          done
          if [ $n -ge 3 ]; then
            echo "Tests failed after 3 attempts"
            exit 1
          fi
        shell: bash

      - name: Upload test logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            ./test-results || true
            ./npm-debug.log || true

      - name: Archive full run diagnostic (on failure)
        if: failure()
        run: |
          echo "Collecting extra diagnostic data..."
          mkdir -p run-diagnostics
          env > run-diagnostics/env.txt
          ps aux > run-diagnostics/ps.txt || true
          df -h > run-diagnostics/df.txt || true
          tar -czf run-diagnostics.tgz run-diagnostics || true
        shell: bash

      - name: Upload diagnostics (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: run-diagnostics
          path: run-diagnostics.tgz

      - name: Notify (optional)
        if: failure()
        run: echo "Build/test failed â€” logs uploaded as artifacts."
